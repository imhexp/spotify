name: builder/patcher workflow (daily)

# this is real dirty code! consider this as a draft, not as prod code. warcrimes await!

on:
  schedule:
    - cron: '0 4 * * *' # patch daily at 6:00 gmt+2 (spanish local time)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  patch:
    runs-on: self-hosted # haha cant afford a vps

    steps:
      - name: Downloading and merging of the original Spotify .xapk
        run: |
          wget --content-disposition --user-agent="Mozilla/5.0" "https://d.apkpure.com/b/XAPK/com.spotify.music?version=latest"

          xapkname=$(ls Spotify*.xapk)
          echo "SPOTIFY_XAPK=$xapkname" >> $GITHUB_ENV
          version=$(echo "$xapkname" | grep -oP '\d+(\.\d+)+')
          echo "SPOTIFY_VERSION=$version" >> $GITHUB_ENV

          mv "$xapkname" spotify.xapk

          wget -O apkeditor.jar "https://github.com/REAndroid/APKEditor/releases/download/V1.4.2/APKEditor-1.4.2.jar"

          java -jar apkeditor.jar m -i spotify.xapk

          rm spotify.xapk

          mv spotify_merged.apk spotify.apk

          apksigner sign --ks keystore_resign.jks --ks-key-alias ${{ secrets.KEY_ALIAS }} --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --key-pass pass:${{ secrets.KEY_PASSWORD }} spotify.apk

      - name: Patch download and actually patching Spotify  # where the madness really starts. this REALLY needs a rewrite (since day 1 lol)
        run: |
          TAG=$(curl -sSL "https://api.github.com/repos/ReVanced/revanced-cli/releases/latest" | jq -r '.tag_name')
          VERSION=${TAG#v}
          echo "REVANCED_VERSION=$VERSION" >> $GITHUB_ENV
          wget -O revanced-cli.jar "https://github.com/ReVanced/revanced-cli/releases/download/${TAG}/revanced-cli-${VERSION}-all.jar"

          PATCH_TAG=$(curl -sSL "https://api.github.com/repos/ReVanced/revanced-patches/releases/latest" | jq -r '.tag_name')
          PATCH_VERSION=${PATCH_TAG#v}
          echo "PATCH_VERSION=$PATCH_VERSION" >> $GITHUB_ENV
          wget -O patches.rvp "https://github.com/ReVanced/revanced-patches/releases/download/${PATCH_TAG}/patches-${PATCH_VERSION}.rvp"

          java -jar revanced-cli.jar patch -p patches.rvp spotify.apk

          rm spotify.apk
          mv spotify-patched.apk spotify.apk

      - name: Generate APK upload name
        run: |
          timestamp=$(TZ="Europe/Madrid" date '+%m-%d-%Y_%H-%M-%S')
          UPLOAD_NAME="spotify${{ env.SPOTIFY_VERSION }}_revanced${{ env.PATCH_VERSION }}_${timestamp}.apk"
          echo "UPLOAD_NAME=$UPLOAD_NAME" >> $GITHUB_ENV

      - name: Upload build to nextcloud
        uses: Nghi-NV/next-cloud-upload-action@v1
        with:
          id: uploadFile
          filePath: "spotify.apk"
          name: "${{ env.UPLOAD_NAME }}"
          uploadPath: "spotify_buildarchive"
          url: "https://cloud.hexp.es"
          username: "hexp"
          password: ${{ secrets.NEXTCLOUD_PASSWORD }}

      - name: Generate shareable link on Nextcloud
        run: |
          sharerequest="curl -u 'hexp:${{ secrets.NEXTCLOUD_PASSWORD }}' -X POST --data-urlencode 'path=/spotify_buildarchive/${{ env.UPLOAD_NAME }}' -d 'shareType=3' -d 'permissions=1' 'https://cloud.hexp.es/ocs/v2.php/apps/files_sharing/api/v1/shares' -H 'OCS-APIRequest: true'"
      
          result=$(eval $sharerequest)
      
          download_link=$(echo "$result" | jq -r '.ocs.data.url')
      
          echo "DOWNLOAD_URL=$download_link" >> $GITHUB_ENV


      - name: Timestamp and SHA256 for release body
        id: meta
        run: |
          export BUILD_TIME=$(TZ="Europe/Madrid" date '+%H:%M:%S')
          export APK_HASH=$(sha256sum spotify.apk | cut -d ' ' -f1)
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV
          echo "APK_HASH=$APK_HASH" >> $GITHUB_ENV

      - name: GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "spotify${{ env.SPOTIFY_VERSION }}_revanced${{ env.PATCH_VERSION }}"
          name: "Spotify ${{ env.SPOTIFY_VERSION }} + ReVanced ${{ env.PATCH_VERSION }}"
          body: |
            ℹ️ This is Spotify `${{ env.SPOTIFY_VERSION }}` patched with ReVanced `${{ env.PATCH_VERSION }}` patches.

            🤖 The APK attached in this release was built and patched automatically using the latest Spotify and ReVanced patches as of `${{ env.BUILD_TIME }} GMT+2`

            ✅ SHA-256 checksum of the APK file:
            `${{ env.APK_HASH }}`

            ⬇️ Download: ${{ env.DOWNLOAD_URL }}

            ❗ Use it at your own risk. Please note that the ReVanced team nor me will not take responsability for banned or ratelimited accounts, it is **you** who decides to use these builds.

      - name: Build summary
        run: |
          echo "Spotify version: \`${{ env.SPOTIFY_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "ReVanced patch version: \`${{ env.PATCH_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "Timestamp (gmt+2): \`${{ env.BUILD_TIME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "SHA256: \`${{ env.APK_HASH }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "DL link (nextcloud): ${{ env.DOWNLOAD_URL }}" >> $GITHUB_STEP_SUMMARY

      - name: Clean up
        run: rm -f apkeditor.jar revanced-cli.jar patches.rvp spotify.apk
